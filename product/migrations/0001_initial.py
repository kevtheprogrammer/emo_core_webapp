# Generated by Django 4.2.6 on 2024-01-12 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(default='category.png', upload_to='category/cover/')),
                ('title', models.CharField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(default=None)),
            ],
            options={
                'ordering': ['-updated'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=700)),
                ('color_code', models.CharField(max_length=6)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb', models.ImageField(default='products.png', upload_to='products/thum/')),
                ('name', models.CharField(max_length=900)),
                ('description', models.TextField(verbose_name='product description')),
                ('price', models.DecimalField(decimal_places=2, default=1.0, max_digits=1000, max_length=7)),
                ('latitude', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, max_length=200, null=True)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000, max_length=7)),
                ('img1', models.ImageField(blank=True, upload_to='products/thum/', verbose_name='first image')),
                ('img2', models.ImageField(blank=True, upload_to='products/thum/', verbose_name='second image')),
                ('img3', models.ImageField(blank=True, upload_to='products/thum/', verbose_name='third image')),
                ('is_pub', models.BooleanField(default=False, verbose_name='is published')),
                ('avr_views_duration', models.DurationField(blank=True, null=True)),
                ('creation_ip_address', models.CharField(blank=True, default=None, max_length=24, null=True)),
                ('deletion_ip_address', models.CharField(blank=True, default=None, max_length=24, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, default=None, null=True)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='product.category')),
                ('colors', models.ManyToManyField(related_name='colors', to='product.color')),
                ('favourite', models.ManyToManyField(blank=True, default=None, related_name='favourite', to=settings.AUTH_USER_MODEL)),
                ('location_city', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='location_city', to='product.city')),
                ('seller', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='seller', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('cities', models.ManyToManyField(to='product.city')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyRequst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb', models.ImageField(default='products.png', upload_to='products/thum/')),
                ('name', models.CharField(max_length=900)),
                ('description', models.TextField(verbose_name='product description')),
                ('img1', models.ImageField(blank=True, upload_to='products/thum/', verbose_name='first image')),
                ('img2', models.ImageField(blank=True, upload_to='products/thum/', verbose_name='second image')),
                ('img3', models.ImageField(blank=True, upload_to='products/thum/', verbose_name='third image')),
                ('is_pub', models.BooleanField(default=False, verbose_name='is published')),
                ('is_available', models.BooleanField(default=False, verbose_name='is available')),
                ('avr_views_duration', models.DurationField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, default=None, null=True)),
                ('cat', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='cat', to='product.category')),
                ('colors', models.ManyToManyField(related_name='product_colors', to='product.color')),
                ('customer', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(related_name='tags', to='product.tag'),
        ),
    ]
